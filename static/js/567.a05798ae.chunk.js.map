{"version":3,"file":"static/js/567.a05798ae.chunk.js","mappings":"sQAiBA,EAXwB,SAAHA,GAA8B,IAAxBC,EAASD,EAATC,UACzB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,GAAI,CAAEC,MAAO,eAAgBC,OAAQ,SAACC,GAAK,OAAKA,EAAMD,OAAOE,MAAQ,CAAC,GACtEC,KAAMR,EAAUS,UAEhBR,EAAAA,EAAAA,KAACS,EAAAA,EAAgB,CAACN,MAAM,aAG9B,E,uCCiDA,EAlDc,WACZ,IAAMO,GAAWC,EAAAA,EAAAA,KACTC,GAAsBC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,MAAM,IAA5DH,kBACRI,GAAmDC,EAAAA,EAAAA,IAAsB,CACvEC,cAAe,CACbC,SAAU,8BACVC,SAAU,gBAHNC,EAAYL,EAAZK,aAA+BC,GAAZN,EAALO,MAAeP,EAARQ,SAAiBR,EAAPM,SAsBvC,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAlB,SAAA,EACRR,EAAAA,EAAAA,KAAC2B,EAAe,CAAC5B,UAAWa,KAC5Ba,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAU,SAAQtB,SAAA,EAChCR,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CAAAvB,SAAC,WACZR,EAAAA,EAAAA,KAAA,QAAMgC,SAAUX,GApBL,SAACY,GAChB,IAAMC,EAA6B,CACjCC,UAAW,+BACXC,cAAe,+BACfC,WAAY,WACZC,MAAO,SACPnB,SAAUc,EAAKd,SACfC,SAAUa,EAAKb,UAEjBV,EAAS,CACP6B,KAAMC,EAAAA,EACNC,QAASP,GAEb,IAO6C1B,UACrCiB,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAU,SAAQtB,SAAA,EAChCR,EAAAA,EAAAA,KAAC0C,EAAAA,GAAU,CACTC,OAAQ,SAAA7C,GAAA,IAAG8C,EAAK9C,EAAL8C,MAAK,OAAO5C,EAAAA,EAAAA,KAAC6C,EAAAA,GAASC,EAAAA,EAAAA,GAAA,GAAKF,GAAS,EAC/CG,KAAK,WACLzB,QAASA,KAEXtB,EAAAA,EAAAA,KAAC0C,EAAAA,GAAU,CACTC,OAAQ,SAAAK,GAAA,IAAGJ,EAAKI,EAALJ,MAAK,OAAO5C,EAAAA,EAAAA,KAAC6C,EAAAA,GAASC,EAAAA,EAAAA,GAAA,GAAKF,GAAS,EAC/CG,KAAK,WACLzB,QAASA,KAEXtB,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACV,KAAK,SAAQ/B,SAAC,qBAMlC,C,4FC1DaG,EAAiB,WAAH,OAASuC,EAAAA,EAAAA,KAA2B,EAClDrC,EAAiDsC,EAAAA,E","sources":["components/common/LoadingFullPage/index.tsx","modules/Login/index.tsx","store/hooks.ts"],"sourcesContent":["import { Backdrop, CircularProgress } from '@mui/material';\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n};\r\n\r\nconst LoadingFullPage = ({ isLoading }: Props) => {\r\n  return (\r\n    <Backdrop\r\n      sx={{ color: 'primary.main', zIndex: (theme) => theme.zIndex.modal + 1 }}\r\n      open={isLoading}\r\n    >\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default LoadingFullPage;\r\n","import { Button, Container, Grid, TextField, Typography } from '@mui/material';\r\nimport LoadingFullPage from 'components/common/LoadingFullPage';\r\nimport { LOGIN_BODY_TYPE } from 'models/authentication';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Controller } from 'react-hook-form';\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\nimport { LOGIN_REQUEST } from 'store/reducers/authentication/actionTypes';\r\n\r\ntype FormDataType = {\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\nconst Login = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { is_global_loading } = useAppSelector((state) => state.global);\r\n  const { handleSubmit, reset, setValue, control } = useForm<FormDataType>({\r\n    defaultValues: {\r\n      username: 'dung+octopus4@101digital.io',\r\n      password: 'Abc@123456',\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: FormDataType) => {\r\n    const loginBody: LOGIN_BODY_TYPE = {\r\n      client_id: 'oO8BMTesSg9Vl3_jAyKpbOd2fIEa',\r\n      client_secret: '0Exp4dwqmpON_ezyhfm0o_Xkowka',\r\n      grant_type: 'password',\r\n      scope: 'openid',\r\n      username: data.username,\r\n      password: data.password,\r\n    };\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n      payload: loginBody,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <LoadingFullPage isLoading={is_global_loading} />\r\n      <Grid container direction=\"column\">\r\n        <Typography>Login</Typography>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container direction=\"column\">\r\n            <Controller\r\n              render={({ field }) => <TextField {...field} />}\r\n              name=\"username\"\r\n              control={control}\r\n            />\r\n            <Controller\r\n              render={({ field }) => <TextField {...field} />}\r\n              name=\"password\"\r\n              control={control}\r\n            />\r\n            <Button type=\"submit\">Submit</Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { AppDispatch, AppState } from '../store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\r\n"],"names":["_ref","isLoading","_jsx","Backdrop","sx","color","zIndex","theme","modal","open","children","CircularProgress","dispatch","useAppDispatch","is_global_loading","useAppSelector","state","global","_useForm","useForm","defaultValues","username","password","handleSubmit","control","reset","setValue","_jsxs","Container","LoadingFullPage","Grid","container","direction","Typography","onSubmit","data","loginBody","client_id","client_secret","grant_type","scope","type","LOGIN_REQUEST","payload","Controller","render","field","TextField","_objectSpread","name","_ref2","Button","useDispatch","useSelector"],"sourceRoot":""}