{"version":3,"file":"static/js/140.997ba9b1.chunk.js","mappings":"mMAyBA,UApBkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,KAYjB,OANAC,EAAAA,EAAAA,YAAU,WACRF,EAAS,CACPG,KAAMC,EAAAA,GAEV,GAAG,KAGDC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,UACHF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAACC,QAbS,WACnBC,aAAaC,QACbC,OAAOC,SAASC,QAClB,EAUkCP,SAAC,YAGrC,C,4FCnBaN,EAAiB,WAAH,OAASc,EAAAA,EAAAA,KAA2B,EAClDC,EAAiDC,EAAAA,E","sources":["modules/Dashboard/index.tsx","store/hooks.ts"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Button, Container, Grid, TextField, Typography } from '@mui/material';\r\nimport { useAppDispatch } from 'store/hooks';\r\nimport { FETCH_INVOICES_REQUEST } from 'store/reducers/invoices/actionTypes';\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useAppDispatch();\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: FETCH_INVOICES_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid>\r\n      <Button onClick={handleLogout}>Logout</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { AppDispatch, AppState } from '../store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\r\n"],"names":["dispatch","useAppDispatch","useEffect","type","FETCH_INVOICES_REQUEST","_jsx","Grid","children","Button","onClick","localStorage","clear","window","location","reload","useDispatch","useAppSelector","useSelector"],"sourceRoot":""}